name: build

on:
  pull_request:
  push:

env:
  NILEARN_DATA: /home/runner/.nilearn_data/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: venv-${{ hashFiles('**/pyproject.toml') }}
      - name: Install
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: make install
      - uses: actions/cache@v2
        id: nilearn-data
        with:
          path: /home/runner/.nilearn_data
          key: nilearn_data
      - name: Build
        run: make docs
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: ./docs/_build/
